#!/usr/bin/env node

// Test script р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н PostgreSQL
import { Pool } from 'pg';
import dotenv from 'dotenv';

// р╣Вр╕лр╕ер╕Ф environment variables
dotenv.config();

console.log('ЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е PostgreSQL...\n');

// р╕Бр╕│р╕лр╕Щр╕Фр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н
const dbConfig = {
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '5432'),
  database: process.env.DB_NAME || 'stock_management',
  user: process.env.DB_USER || 'stock_app_user',
  password: process.env.DB_PASSWORD || 'app_secure_password',
  max: 5,
  idleTimeoutMillis: 30000,
  connectionTimeoutMillis: 2000,
};

console.log('ЁЯУЛ р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н:');
console.log(`   Host: ${dbConfig.host}`);
console.log(`   Port: ${dbConfig.port}`);
console.log(`   Database: ${dbConfig.database}`);
console.log(`   User: ${dbConfig.user}`);
console.log(`   Password: ${dbConfig.password.substring(0, 3)}***`);
console.log('');

// р╕кр╕гр╣Йр╕▓р╕З connection pool
const pool = new Pool(dbConfig);

async function testConnection() {
  try {
    console.log('тП│ р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н...');
    
    // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
    const client = await pool.connect();
    console.log('тЬЕ р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╣Ар╕гр╣Зр╕И!');

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕зр╕нр╕гр╣Мр╕Кр╕▒р╕Щр╕Вр╕нр╕З PostgreSQL
    const versionResult = await client.query('SELECT version()');
    console.log('ЁЯУК р╣Ар╕зр╕нр╕гр╣Мр╕Кр╕▒р╕Щ PostgreSQL:', versionResult.rows[0].version.split(' ')[1]);

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ current time
    const timeResult = await client.query('SELECT NOW() as current_time');
    console.log('ЁЯХР р╣Ар╕зр╕ер╕▓р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щр╕Ир╕▓р╕Бр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е:', timeResult.rows[0].current_time.toLocaleString('th-TH'));

    client.release();

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Хр╕▓р╕гр╕▓р╕Зр╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
    console.log('\nЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Хр╕▓р╕гр╕▓р╕Зр╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е:');
    const tablesResult = await pool.query(`
      SELECT tablename, schemaname 
      FROM pg_tables 
      WHERE schemaname = 'public' 
      ORDER BY tablename
    `);

    if (tablesResult.rows.length === 0) {
      console.log('тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕Хр╕▓р╕гр╕▓р╕Зр╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е');
      console.log('ЁЯТб р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕▒р╕Щр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣М setup-database-schema.sh р╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕гр╣Йр╕▓р╕Зр╕Хр╕▓р╕гр╕▓р╕З');
    } else {
      console.log('ЁЯУК р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Хр╕▓р╕гр╕▓р╕З:');
      
      for (const table of tablesResult.rows) {
        try {
          const countResult = await pool.query(`SELECT COUNT(*) FROM ${table.tablename}`);
          const count = parseInt(countResult.rows[0].count);
          console.log(`   тЬЕ ${table.tablename}: ${count} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
        } catch (error) {
          console.log(`   тЭМ ${table.tablename}: р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Щр╕▒р╕Ър╕Ир╕│р╕Щр╕зр╕Щр╣Др╕Фр╣Й (${error.message})`);
        }
      }
    }

    // р╕Чр╕Фр╕кр╕нр╕Ъ CRUD operations (р╕Цр╣Йр╕▓р╕бр╕╡р╕Хр╕▓р╕гр╕▓р╕З categories)
    const hasCategories = tablesResult.rows.some(row => row.tablename === 'categories');
    if (hasCategories) {
      console.log('\nЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ CRUD:');
      
      try {
        // р╕Чр╕Фр╕кр╕нр╕Ъ INSERT
        const insertResult = await pool.query(
          "INSERT INTO categories (name, description) VALUES ($1, $2) ON CONFLICT (name) DO NOTHING RETURNING *",
          ['Test Category', 'р╕лр╕бр╕зр╕Фр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н']
        );
        
        if (insertResult.rows.length > 0) {
          console.log('   тЬЕ INSERT: р╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕Фр╕кр╕нр╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И');
          
          // р╕Чр╕Фр╕кр╕нр╕Ъ SELECT
          const selectResult = await pool.query(
            "SELECT * FROM categories WHERE name = $1",
            ['Test Category']
          );
          console.log(`   тЬЕ SELECT: р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╣Ар╕гр╣Зр╕И (${selectResult.rows.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г)`);
          
          // р╕Чр╕Фр╕кр╕нр╕Ъ DELETE (р╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕Фр╕кр╕нр╕Ъ)
          await pool.query("DELETE FROM categories WHERE name = $1", ['Test Category']);
          console.log('   тЬЕ DELETE: р╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕Фр╕кр╕нр╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И');
        } else {
          console.log('   тД╣я╕П р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕Фр╕кр╕нр╕Ър╕бр╕╡р╕нр╕вр╕╣р╣Ир╣Бр╕ер╣Йр╕з (р╕Вр╣Йр╕▓р╕б CRUD test)');
        }
      } catch (error) {
        console.log(`   тЭМ CRUD Test р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з: ${error.message}`);
      }
    }

    return true;
  } catch (error) {
    console.error('тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н:', error.message);
    
    // р╣Бр╕кр╕Фр╕Зр╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕В
    console.log('\nЁЯТб р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕В:');
    if (error.code === 'ECONNREFUSED') {
      console.log('   - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ PostgreSQL server р╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕вр╕╣р╣И');
      console.log('   - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ host р╣Бр╕ер╕░ port р╣Гр╕Щр╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓');
    } else if (error.code === '28P01') {
      console.log('   - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ username р╣Бр╕ер╕░ password');
      console.log('   - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕┤р╕Чр╕Шр╕┤р╣Мр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕Зр╕Вр╕нр╕З user');
    } else if (error.code === '3D000') {
      console.log('   - р╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕бр╣Ир╕бр╕╡р╕нр╕вр╕╣р╣И р╕Бр╕гр╕╕р╕Ур╕▓р╕кр╕гр╣Йр╕▓р╕Зр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╣Ир╕нр╕Щ');
    }
    
    return false;
  } finally {
    await pool.end();
  }
}

testConnection().then((success) => {
  if (success) {
    console.log('\nЁЯОЙ р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ: р╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е PostgreSQL р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ!');
    process.exit(0);
  } else {
    console.log('\nтЭМ р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ: р╕Юр╕Ър╕Ыр╕▒р╕Нр╕лр╕▓р╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е');
    process.exit(1);
  }
});